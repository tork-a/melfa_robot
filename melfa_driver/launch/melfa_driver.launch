<launch>
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <arg name="launch_rviz" default="false"/>
  
  <arg name="loopback" default="false"/>
  <arg name="robot_ip" default="127.0.0.1"/>

  <!-- Start MELFA driver -->
  <node name="melfa_driver" pkg="melfa_driver" type="melfa_driver_node">
    <param name="robot_ip" value="$(arg robot_ip)"/>
  </node>

  <!-- Start loopback node -->
  <node if="$(arg loopback)"
	launch-prefix="$(arg launch_prefix)"
	name="melfa_loopback" pkg="melfa_driver" type="melfa_loopback_node">
  </node>

  <!-- Load robot description -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find melfa_description)/urdf/rv7fl.urdf.xacro'" />

  <!-- Load joint controller configurations -->
  <rosparam file="$(find melfa_driver)/config/controller.yaml" command="load"/>

  <!-- Load the position controller -->
  <node if="false" name="controller_spawner"
	pkg="controller_manager" type="spawner" respawn="false"
	args="joint_state_controller
	      joint1_position_controller
	      joint2_position_controller
	      joint3_position_controller
	      joint4_position_controller
	      joint5_position_controller
	      joint6_position_controller"/>

  <node if="true" name="controller_spawner" pkg="controller_manager"
	type="spawner"	respawn="false"
	args="joint_state_controller
	      joint_trajectory_controller"/>

  <node name="robot_state_publisher"
	pkg="robot_state_publisher" type="state_publisher"/>
  
  <node if="$(arg launch_rviz)"
	name="rviz" pkg="rviz" type="rviz"
	args="-d $(find melfa_description)/launch/melfa_description.rviz"/>

</launch>
